(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{363:function(t,v,_){"use strict";_.r(v);var a=_(25),r=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"gof-模式分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#gof-模式分类"}},[t._v("#")]),t._v(" GOF 模式分类")]),t._v(" "),_("h2",{attrs:{id:"将设计原则提升为设计经验"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#将设计原则提升为设计经验"}},[t._v("#")]),t._v(" 将设计原则提升为设计经验")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("设计习语/技巧")]),t._v(" "),_("blockquote",[_("p",[t._v("特定编程语言相关的底层模式,技巧,惯用法")])])]),t._v(" "),_("li",[_("p",[t._v("设计模式")]),t._v(" "),_("blockquote",[_("p",[t._v("类与相互通信的对象之间的组织关系,包括它们的角色,职责,协作方式")])])]),t._v(" "),_("li",[_("p",[t._v("架构模式")]),t._v(" "),_("blockquote",[_("p",[t._v("子系统的划分,职责,以及如何组织它们之间关系的规则")])])])]),t._v(" "),_("h2",{attrs:{id:"模式目的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模式目的"}},[t._v("#")]),t._v(" 模式目的")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("创建型Creational")]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("将对象的部分创建工作分配给子类或者其他对象,从而应对需求变化对对象创建时的具体类型实现带来的冲击")])])])]),t._v(" "),_("li",[_("p",[t._v("结构性Structural")]),t._v(" "),_("blockquote",[_("p",[t._v("通过类继承和对象组合获得更灵活的结构,从而应对需求变化对"),_("strong",[t._v("对象的结构")]),t._v("带来的冲击")])])]),t._v(" "),_("li",[_("p",[t._v("行为性Behavioral")]),t._v(" "),_("blockquote",[_("p",[t._v("划分类与对象间的职责,从而应对需求变化对"),_("strong",[t._v("多个交互对象")]),t._v("带来的冲击")])])])]),t._v(" "),_("h2",{attrs:{id:"范围"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#范围"}},[t._v("#")]),t._v(" 范围")]),t._v(" "),_("ol",[_("li",[t._v("类模式: 处理类与子类的静态关系")]),t._v(" "),_("li",[t._v("对象模式: 处理对象间的动态关系")])]),t._v(" "),_("h2",{attrs:{id:"重构获得模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重构获得模式"}},[t._v("#")]),t._v(" 重构获得模式")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("好的面向对象设计指可以满足"),_("strong",[t._v("应对变化,提高复用")]),t._v("的设计")])]),t._v(" "),_("li",[_("p",[t._v("需求的频繁变化")]),t._v(" "),_("blockquote",[_("p",[t._v("寻找变化点,在变化点处应用设计模式,从而更好的应对需求的变化")]),t._v(" "),_("p",[t._v("在什么时候,什么地点应用设计模式比理解设计模式结构本身更重要")])])]),t._v(" "),_("li",[_("p",[t._v("设计模式不宜先入为主")]),t._v(" "),_("blockquote",[_("p",[t._v("没有一步到位的设计模式")])])])]),t._v(" "),_("h2",{attrs:{id:"推荐书籍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#推荐书籍"}},[t._v("#")]),t._v(" 推荐书籍")]),t._v(" "),_("p",[t._v("《重构与模式》")]),t._v(" "),_("p",[t._v("《重构--改善既有代码的设计》")]),t._v(" "),_("h2",{attrs:{id:"重构关键技法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重构关键技法"}},[t._v("#")]),t._v(" 重构关键技法")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("静态")]),t._v(" "),_("th",[t._v("动态")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("静态")]),t._v(" "),_("td",[t._v("动态")])]),t._v(" "),_("tr",[_("td",[t._v("早绑定")]),t._v(" "),_("td",[t._v("晚绑定")])]),t._v(" "),_("tr",[_("td",[t._v("继承")]),t._v(" "),_("td",[t._v("组合")])]),t._v(" "),_("tr",[_("td",[t._v("编译时依赖")]),t._v(" "),_("td",[t._v("运行时依赖")])]),t._v(" "),_("tr",[_("td",[t._v("紧耦合")]),t._v(" "),_("td",[t._v("松耦合")])])])])])}),[],!1,null,null,null);v.default=r.exports}}]);